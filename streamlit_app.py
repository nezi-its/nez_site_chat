# pip install streamlit google-generativeai

import os
import json
import streamlit as st
import google.generativeai as genai
from google.generativeai.types import Content, Part, Tool, GenerateContentConfig, ThinkingConfig
from time import sleep

# –§–∞–π–ª –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
DB_FILE = "chat_history.json"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
if os.path.exists(DB_FILE):
    with open(DB_FILE, "r", encoding="utf-8") as f:
        chat_history = json.load(f)
else:
    chat_history = []

# --- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="‚ú® Minecraft Code Generator", page_icon="üõ°Ô∏è", layout="wide")

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–µ—Ä–µ–∑ sidebar
st.sidebar.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
theme_choice = st.sidebar.selectbox("–¢–µ–º–∞", ["–°–≤–µ—Ç–ª–∞—è", "–¢—ë–º–Ω–∞—è", "Minecraft –ó–µ–ª–µ–Ω–∞—è"])
font_size = st.sidebar.slider("–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞", min_value=12, max_value=24, value=16)
chat_bg_color = st.sidebar.color_picker("–¶–≤–µ—Ç —Ñ–æ–Ω–∞ —á–∞—Ç–∞", "#f0f0f5")
user_bg_color = st.sidebar.color_picker("–¶–≤–µ—Ç —Ñ–æ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "#d1e7dd")
ai_bg_color = st.sidebar.color_picker("–¶–≤–µ—Ç —Ñ–æ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π AI", "#f8d7da")
button_color = st.sidebar.color_picker("–¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏", "#6a11cb")

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
if theme_choice == "–¢—ë–º–Ω–∞—è":
    st.markdown("""
    <style>
    body {background-color: #121212; color: #ffffff;}
    .stTextArea textarea {background-color: #1e1e1e; color: #ffffff; font-size: %dpx;}
    .stButton button {background-color: %s; color: white; font-weight: bold;}
    .chat-box {padding: 10px; border-radius: 10px; margin-bottom: 10px;}
    .user-box {background-color: %s; color: #0f5132;}
    .ai-box {background-color: %s; color: #842029;}
    </style>
    """ % (font_size, button_color, user_bg_color, ai_bg_color), unsafe_allow_html=True)
elif theme_choice == "Minecraft –ó–µ–ª–µ–Ω–∞—è":
    st.markdown("""
    <style>
    body {background-color: #228B22; color: #000000;}
    .stTextArea textarea {background-color: #90EE90; color: #000000; font-size: %dpx;}
    .stButton button {background-color: %s; color: white; font-weight: bold;}
    .chat-box {padding: 10px; border-radius: 10px; margin-bottom: 10px; border: 2px solid #006400;}
    .user-box {background-color: %s; color: #006400;}
    .ai-box {background-color: %s; color: #8B4513;}
    </style>
    """ % (font_size, button_color, user_bg_color, ai_bg_color), unsafe_allow_html=True)
else:
    st.markdown("""
    <style>
    .stTextArea textarea {background-color: %s; color: #111; font-size: %dpx;}
    .stButton button {background-color: %s; color: white; font-weight: bold;}
    .chat-box {padding: 10px; border-radius: 10px; margin-bottom: 10px;}
    .user-box {background-color: %s; color: #0f5132;}
    .ai-box {background-color: %s; color: #842029;}
    </style>
    """ % (chat_bg_color, font_size, button_color, user_bg_color, ai_bg_color), unsafe_allow_html=True)

st.title("üõ°Ô∏è Minecraft Code Generator")
st.subheader("–ì–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ–¥ –¥–ª—è –º–æ–¥–æ–≤, —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏ –º–∏—Ä–æ–≤ Minecraft —Å –ø–æ–º–æ—â—å—é AI")

# API –∫–ª—é—á —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±–µ–∑ –≤–≤–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ)
api_key = os.environ.get("GEMINI_API_KEY")
if not api_key:
    st.error("API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GEMINI_API_KEY.")
else:
    # –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ Minecraft
    user_input = st.text_area("–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π –∫–æ–¥ Minecraft –≤–∞–º –Ω—É–∂–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–º–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π –º–µ—á' –∏–ª–∏ '—Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–µ—Ä–º—ã'):", height=150)

    if st.button("–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"):
        if not user_input.strip():
            st.warning("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ!")
        else:
            genai.configure(api_key=api_key)
            model = genai.GenerativeModel("gemini-1.5-flash")  # –ò—Å–ø—Ä–∞–≤–∏–ª –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é –æ–ø–µ—á–∞—Ç–∫—É –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)

            # –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ Minecraft
            system_prompt = "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ Minecraft. –ì–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ–ª—å–∫–æ –∫–æ–¥ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–æ–≤, —Å–∫—Ä–∏–ø—Ç–æ–≤ (–Ω–∞ Java, Python —Å MCreator –∏–ª–∏ datapacks) –∏–ª–∏ –º–∏—Ä–æ–≤. –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏–π —Ç–µ–∫—Å—Ç, —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–¥ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏."

            contents = [
                Content(
                    role="user",
                    parts=[Part.from_text(system_prompt + "\n\n" + user_input)],
                ),
            ]

            # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã, –Ω–æ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ –±—ã–ª GoogleSearch, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π; —É–±—Ä–∞–ª –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
            # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∏—Å–∫, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ API

            generate_content_config = GenerateContentConfig(
                # –£–±—Ä–∞–ª thinking_config, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π; –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ temperature –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
                temperature=0.7,
            )

            # –ü–æ—Ç–æ–∫–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
            response_text = ""
            response_container = st.empty()
            with st.spinner("üõ°Ô∏è AI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥..."):
                response = model.generate_content(contents, stream=True, generation_config=generate_content_config)
                for chunk in response:
                    if hasattr(chunk, 'text'):
                        response_text += chunk.text
                        response_container.markdown(f"<div class='chat-box ai-box'>{response_text}</div>", unsafe_allow_html=True)
                        sleep(0.02)  # –ü–ª–∞–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∏

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É
            chat_history.append({"user": user_input, "ai": response_text})
            with open(DB_FILE, "w", encoding="utf-8") as f:
                json.dump(chat_history, f, ensure_ascii=False, indent=2)

# --- –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ ---
st.markdown("### üí¨ –ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π")
for item in reversed(chat_history[-20:]):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π
    st.markdown(f"<div class='chat-box user-box'><b>–ó–∞–ø—Ä–æ—Å:</b> {item['user']}</div>", unsafe_allow_html=True)
    st.markdown(f"<div class='chat-box ai-box'><b>–ö–æ–¥ –æ—Ç AI:</b> {item['ai']}</div>", unsafe_allow_html=True)
